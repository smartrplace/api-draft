package org.smartrplace.efficiency.api;

import java.util.List;

import org.ogema.core.model.Resource;
import org.ogema.model.locations.Building;
import org.ogema.model.user.NaturalPerson;
import org.smartrplace.efficiency.model.SmartEffBaseData;
import org.smartrplace.efficiency.model.SmartEffUserData;

public interface DataEntryProvider {
	List<Class<? extends Resource>> getResourceTypesSupported();
	/** TODO: Get mask via URL or is the base page provided by standard app and we provide a list of 
	 * labels and requirements based on which the mask is generated by standard app. The latter would
	 * be much more complex, though.
	 * 
	 * @param type
	 * @param resourceToEdit may be null if a new resource shall be created
	 * @param parentOrReference resource indicating where the new resource shall be created, only relevant
	 * 		if resourceToEdit is null
	 * @return URL of mask
	 */
	<T extends Resource> String provideMaskUrl(Class<T> type, T resourceToEdit, Resource parentOrReference,
			SmartEffUserData userData, NaturalPerson user, Building building,
			SmartEffBaseData baseData);
	
	/** If a resource type is listed in getResourceTypesSupported, but not here, the respective
	 * type can only be edited, but not created
	 * 
	 * @return
	 */
	List<Class<? extends Resource>> getResourceTypesAbleToCreate();
}
