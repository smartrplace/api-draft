package org.ogema.devicefinder.api;

import java.util.Collection;

import org.ogema.recordreplay.testing.RecReplayObserver;

public interface AlarmingService {
	public static final String ALARMSTATUS_RES_NAME = "alarmStatus";

	boolean registerAlarmingExtension(AlarmingExtension ext);
	Collection<AlarmingExtension> getAlarmingExtensions();
	AlarmingExtension getAlarmingExtension(String id);
	
	/** Register a new alarm group. If a group with the id already exists an exception is thrown.
	 * Usually such registration is done in {@link AlarmingExtension#newAlarmNotification(org.ogema.devicefinder.api.AlarmingExtension.BaseAlarm)},
	 * but can be done anywhere. Alarm groups are coordinated over apps, usually all groups of any hierarchy like
	 * Sensor error - communication adapter at gateway error - full gateway error should be done by a single
	 * {@link AlarmingExtension}.<br>
	 * TODO: Maybe all groups are generated by a single app, but other extensions may also do this if this allows
	 * more efficient development*/
	void registerOngoingAlarmGroup(AlarmOngoingGroup grp);
	/** Get alarm group
	 * 
	 * @param id
	 * @return null if no group with the id exists
	 */
	AlarmOngoingGroup getOngoingGroup(String id);
	Collection<AlarmOngoingGroup> getOngoingGroups(boolean includeFinisheds);
	
	/** Mark the OngoingGroup as finished. The group may be removed by the housekeeping
	 * after some time and may be lost on a new system startup
	 * @param id
	 * @return
	 */
	@Deprecated // not used
	boolean finishOngoingGroup(String id);
	
	void registerRecReplayObserver(RecReplayObserver observer);
	RecReplayObserver getRecReplayObserver(String id);
	Collection<RecReplayObserver> getAllObservers();
}
